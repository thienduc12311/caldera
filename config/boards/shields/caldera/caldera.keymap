#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        scan_text: scan_text {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_GUI &kp LEFT_SHIFT &kp A>, <&macro_press>;

            label = "SCAN_TEXT";
        };

        screen_shot: screen_shot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT_SHIFT &kp S>, <&macro_press>;

            label = "SCREEN_SHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
            // | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
            // | CTRL | ALT | GUI | SPC | SPC | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |

            bindings = <
&kp ESCAPE  &kp N1    &kp N2      &kp N3  &kp N4    &kp N5      &kp N6     &kp N7  &kp N8         &kp N9         &kp N0             &kp EQUAL
&kp TAB     &kp Q     &kp W       &kp E   &kp R     &kp T       &kp Y      &kp U   &kp I          &kp O          &kp P              &kp BACKSPACE
&kp CAPS    &kp A     &kp S       &kp D   &kp F     &kp G       &kp H      &kp J   &kp K          &kp L          &kp SEMI           &kp RET
&kp LSHFT   &kp Z     &kp X       &kp C   &kp V     &kp B       &kp N      &kp M   &kp COMMA      &kp DOT        &kp FSLH           &kp RSHFT
&kp LCTRL   &kp LALT  &scan_text  &mo 1   &kp LALT  &kp LGUI    &kp SPACE  &mo 2   &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &screen_shot
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |          |       |       |       |       |       | BTCLR |
            // |       |       |       |       |       |       |          |       |       |       |       |       |       |
            // |       |       |       | LPAR  | RPAR  |       |          |       | LBKT  | RBKT  |       |       |       |
            // |       |       |       |       |       |       |          |       |       |       |       |       |       |

            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &soft_off  &trans    &trans    &trans     &trans     &bt BT_CLR
&trans          &trans        &trans        &trans        &trans        &trans          &trans     &kp S     &trans    &trans     &trans     &trans
&trans          &trans        &trans        &kp LPAR      &kp RPAR      &trans          &kp B      &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp D
&trans          &trans        &trans        &trans        &trans        &trans          &trans     &trans    &trans    &trans     &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans      &trans          &trans         &trans            &trans                &trans                 &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans           &kp HASH    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans      &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp NON_US_BACKSLASH   &kp GRAVE
&trans  &trans  &trans          &trans          &trans           &trans      &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp SQT                &kp RIGHT_SHIFT
&trans  &trans  &trans          &trans          &trans           &trans      &trans          &trans         &trans            &trans                &trans                 &trans
            >;
        };
    };
};
